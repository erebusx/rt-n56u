diff -upr /home/xch/ZeroTierOne-1.6.6-fixed-windows-inf/make-linux.mk ZeroTierOne-1.6.6/make-linux.mk
--- a/make-linux.mk	2021-09-23 23:02:38.000000000 +0000
+++ b/make-linux.mk	2022-02-09 03:17:43.842052087 +0000
@@ -69,11 +69,11 @@ ifeq ($(ZT_DEBUG),1)
 	# C25519 in particular is almost UNUSABLE in -O0 even on a 3ghz box!
 node/Salsa20.o node/SHA512.o node/C25519.o node/Poly1305.o: CXXFLAGS=-Wall -O2 -g -pthread $(INCLUDES) $(DEFS)
 else
-	CFLAGS?=-O3 -fstack-protector -fPIE
+	CFLAGS?=-O3 -fstack-protector
 	override CFLAGS+=-Wall -Wno-deprecated -pthread $(INCLUDES) -DNDEBUG $(DEFS)
-	CXXFLAGS?=-O3 -fstack-protector -fPIE
+	CXXFLAGS?=-O3 -fstack-protector
 	override CXXFLAGS+=-Wall -Wno-deprecated -std=c++11 -pthread $(INCLUDES) -DNDEBUG $(DEFS)
-	LDFLAGS=-pie -Wl,-z,relro,-z,now
+	LDFLAGS=-Wl,-z,relro,-z,now
 	STRIP?=strip
 	STRIP+=--strip-all
 endif
diff -upr /home/xch/ZeroTierOne-1.6.6-fixed-windows-inf/node/Utils.cpp ZeroTierOne-1.6.6/node/Utils.cpp
--- a/node/Utils.cpp	2021-09-24 07:02:38.000000000 +0800
+++ b/node/Utils.cpp	2022-02-09 11:43:30.675603745 +0800
@@ -29,7 +29,7 @@
 #include <sys/uio.h>
 #include <dirent.h>
 #ifdef __LINUX__
-#include <sys/auxv.h>
+//#include <sys/auxv.h>
 #endif
 #endif
diff -upr /home/xch/ZeroTierOne-1.6.6-fixed-windows-inf/osdep/LinuxEthernetTap.cpp ZeroTierOne-1.6.6/osdep/LinuxEthernetTap.cpp
--- a/osdep/LinuxEthernetTap.cpp	2021-09-24 07:02:38.000000000 +0800
+++ b/osdep/LinuxEthernetTap.cpp	2022-02-11 09:47:26.093261920 +0800
@@ -207,18 +207,12 @@ LinuxEthernetTap::LinuxEthernetTap(
 					printf("WARNING: ioctl() failed setting up Linux tap device (bring interface up)\n");
 					return;
 				}
-				ifr.ifr_flags |= IFF_UP;
-				if (ioctl(sock,SIOCSIFFLAGS,(void *)&ifr) < 0) {
-					::close(sock);
-					printf("WARNING: ioctl() failed setting up Linux tap device (bring interface up)\n");
-					return;
-				}
 
 				// Some kernel versions seem to require you to yield while the device comes up
 				// before they will accept MTU and MAC. For others it doesn't matter, but is
 				// harmless. This was moved to the worker thread though so as not to block the
 				// main ZeroTier loop.
-				usleep(500000);
+				//usleep(500000);
 
 				ifr.ifr_ifru.ifru_hwaddr.sa_family = ARPHRD_ETHER;
 				_mac.copyTo(ifr.ifr_ifru.ifru_hwaddr.sa_data,6);
@@ -228,6 +222,16 @@ LinuxEthernetTap::LinuxEthernetTap(
 					return;
 				}
 
+				usleep(100000);
+				ifr.ifr_flags |= IFF_MULTICAST;
+				ifr.ifr_flags |= IFF_UP;
+				if (ioctl(sock,SIOCSIFFLAGS,(void *)&ifr) < 0) {
+					::close(sock);
+					printf("WARNING: ioctl() failed setting up Linux tap device (bring interface up) 2\n");
+					return;
+				}
+				usleep(100000);
+
 				ifr.ifr_ifru.ifru_mtu = (int)_mtu;
 				if (ioctl(sock,SIOCSIFMTU,(void *)&ifr) < 0) {
 					::close(sock);
@@ -235,6 +239,7 @@ LinuxEthernetTap::LinuxEthernetTap(
 					return;
 				}
 
+
 				fcntl(_fd,F_SETFL,O_NONBLOCK);
 
 				::close(sock);
